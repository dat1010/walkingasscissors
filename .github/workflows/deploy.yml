name: Build and Deploy Godot Web

on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: '4.3.0'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup Godot using chickensoft-games/setup-godot
      - name: Install Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION }}
          use-dotnet: false
          include-templates: true

      # 3. Import the Godot project
      - name: Initial Godot Import
        run: |
          godot --headless --import || exit 0

      # 4. Export your Godot project to HTML5 / WebXR
      #    Replace "WebXR" below with the name of your actual export preset.
      - name: Export Godot Project (HTML5)
        run: |
          godot --headless --export-release "HTML5"

      # 5. Deploy to AWS S3
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          # Put your real bucket name or reference a secret
          AWS_S3_BUCKET: walkingasscissors.com-game
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          # Adjust SOURCE_DIR to where your HTML5 export actually lands.
          # By default, Godot might export to something like `./build/WebXR`
          SOURCE_DIR: 'build/webxr'

      # 6. (Optional) Invalidate CloudFront so new changes are visible immediately
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v1.3
        with:
          distribution: E7A0J7BUIQFLE
          paths: '/*'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'

